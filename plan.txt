Требования базового уровня:
+ все манипуляции с данными выполняются на стороне клиента , серверная часть не требуется 
 
+ импортируйте свой UI Kit в этот проект и используйте его 

+ используйте любую библиотеку управления состоянием, какую захотите
 
+ необходимо использовать любую стандартизированную методологию архитектуры (например, FSD)

+ создать событие: все поля из дизайна должны быть реализованы, за исключением функции «Повторить»

+ создавать новое событие, только нажав кнопку «Создать»

+ создание, редактирование и удаление функциональности календарей

+ средство выбора даты меняет дату текущего дня, события должны обновляться соответствующим образом

+ в представлении «День» переключатель вверху (например, < > ноябрь 2023 г.) должен изменить текущий день на следующий/предыдущий день

+ каждое событие прикрепляется к календарю, цвет события должен совпадать с цветом календаря

+ всегда существует календарь «по умолчанию», поэтому пользователь не может его удалить, а только редактировать

+ каждый В календаре есть флажок, позволяющий пользователю скрывать/показывать события из определенного календаря.

+ используйте Firebase для авторизации, поэтому необходима страница приветствия с кнопкой входа в систему

+  создавать, просматривать, редактировать и удалять события функциональность

- реализуйте  «День» и «Неделя» представления, поэтому необходим раскрывающийся список с представлениями

— создайте событие, щелкнув определенную ячейку календаря

— разверните приложение на любом хостинге: Heroku, Firebase, DigitalOcean и т. д.

Stack : React, Redux-toolkit, Tanstack-router, Firebase.


